rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own profile data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Users can read and write their own notifications
      match /notifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Barbers can read and write their own services
      match /services/{serviceId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Appointments - customers can create, read their own, and update payment status
    // Barbers can read appointments where they are the barber
    match /appointments/{appointmentId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == resource.data.barberId);
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == resource.data.barberId);
      allow delete: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == resource.data.barberId);
    }
    
    // Payment records - customers can create payment records for their own appointments
    match /payments/{paymentId} {
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.customerId;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == resource.data.barberId);
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == resource.data.barberId);
    }
    
    // Transaction records - allow creation and reading for users involved in the transaction
    match /transactions/{transactionId} {
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == resource.data.barberId);
    }
    
    // Tips - customers can create tip records for their appointments
    match /tips/{tipId} {
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.customerId;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == resource.data.barberId);
    }
    
    // Bulletin posts - authenticated users can read, barbers can create
    match /bulletins/{postId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null;
      
      // Comments on bulletin posts
      match /comments/{commentId} {
        allow read, create: if request.auth != null;
        allow update, delete: if request.auth != null && 
          request.auth.uid == resource.data.authorId;
      }
    }
    
    // Public read access for barber discovery (filtered by location/zipcode)
    match /users/{userId} {
      allow read: if request.auth != null;
    }
  }
}
